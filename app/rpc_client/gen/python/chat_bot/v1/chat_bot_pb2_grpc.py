# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from chat_bot.v1 import chat_bot_pb2 as chat__bot_dot_v1_dot_chat__bot__pb2


class ChatBotServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetModelResponse = channel.unary_unary(
                '/chat_bot.v1.ChatBotService/GetModelResponse',
                request_serializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelResponseRequest.SerializeToString,
                response_deserializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelResponseResponse.FromString,
                _registered_method=True)
        self.GetModelImageResponse = channel.unary_unary(
                '/chat_bot.v1.ChatBotService/GetModelImageResponse',
                request_serializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelImageResponseRequest.SerializeToString,
                response_deserializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelImageResponseResponse.FromString,
                _registered_method=True)


class ChatBotServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetModelResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetModelImageResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ChatBotServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetModelResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelResponse,
                    request_deserializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelResponseRequest.FromString,
                    response_serializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelResponseResponse.SerializeToString,
            ),
            'GetModelImageResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetModelImageResponse,
                    request_deserializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelImageResponseRequest.FromString,
                    response_serializer=chat__bot_dot_v1_dot_chat__bot__pb2.GetModelImageResponseResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'chat_bot.v1.ChatBotService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('chat_bot.v1.ChatBotService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ChatBotService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetModelResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat_bot.v1.ChatBotService/GetModelResponse',
            chat__bot_dot_v1_dot_chat__bot__pb2.GetModelResponseRequest.SerializeToString,
            chat__bot_dot_v1_dot_chat__bot__pb2.GetModelResponseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetModelImageResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/chat_bot.v1.ChatBotService/GetModelImageResponse',
            chat__bot_dot_v1_dot_chat__bot__pb2.GetModelImageResponseRequest.SerializeToString,
            chat__bot_dot_v1_dot_chat__bot__pb2.GetModelImageResponseResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
